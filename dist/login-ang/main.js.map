{"version":3,"sources":["./src/app/login1/login1.component.ts","./src/app/login1/login1.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login1',\n  templateUrl: './login1.component.html',\n  styleUrls: ['./login1.component.css']\n})\nexport class Login1Component implements OnInit {\nUsername:string;\nPassword:string;\ndata:string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\nloginuser(){\n  if(this.Username==\"admin\" && this.Password==\"admin123\")\n    {\n    console.log(\"welcome\");\n    this.data=\"Welcome\";\n    }\n  else{\n    console.log(\"wrong username or password\");\n    this.data=\"Wrong username or password\";\n  }\n    }\n}\n\n","<html>\n<head>\n<title>login page</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"login1.component.css\" >\n</head>\n<body > \n    \n<div class=\"img\"></div>\n<form class=\"box\" action=\"login1.component.html\">\n    <h1>Login</h1>\n    <input type=\"text\" name=\"Username\" placeholder=\"Username\" [(ngModel)]=\"Username\" value=\"\">\n    <br>\n    <input type=\"password\" name=\"Password\" placeholder=\"Password\" [(ngModel)]=\"Password\" value=\"\"><br>\n    <input type=\"submit\" name =\"Submit\" value=\"Login\" (click)=\"loginuser()\">\n    {{data}}\n</form>\n</body>\n</html>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'login-ang';\n}\n","\n<app-login1></app-login1>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Login1Component } from './login1/login1.component';\nimport{HttpClientModule}from '@angular/common/http' ;\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n     Login1Component,\n  \n   \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}